/// <reference types="node" />
import { EventEmitter } from 'events';
import { Configuration } from './configuration';
import { Separators } from './edi/separators';
import { ElementEntry, SegmentEntry } from './validator';
export declare class Parser extends EventEmitter {
    private validator;
    configuration: Configuration;
    private tokenizer;
    private state;
    private segment;
    private element;
    constructor(configuration?: Configuration);
    separators(): Separators;
    onOpenSegment(segment: string, segmentEntry: SegmentEntry | undefined): void;
    onCloseSegment(): void;
    onElement(element: ElementEntry | undefined): void;
    onComponent(data: string): void;
    updateCharset(charset: string): void;
    end(): void;
    private una;
    write(chunk: string): void;
    private errors;
}
//# sourceMappingURL=parser.d.ts.map