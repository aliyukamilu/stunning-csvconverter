"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UNECELegacyMessageStructureParser = void 0;
const messageStructureParser_1 = require("./messageStructureParser");
const uneceMetaDataPageParser_1 = require("./uneceMetaDataPageParser");
const uneceStructurePageParser_1 = require("./uneceStructurePageParser");
class UNECELegacyMessageStructureParser extends messageStructureParser_1.UNECEMessageStructureParser {
    parseMetaDataPage(page) {
        const parser = new uneceMetaDataPageParser_1.UNECEMetaDataPageParser();
        parser.parse(page);
        return parser.spec;
    }
    parseStructurePage(page, spec) {
        const parser = new uneceStructurePageParser_1.UNECEStructurePageParser(spec);
        parser.parse(page);
        return parser.segmentNames;
    }
    loadTypeSpec() {
        const url = './' + this.type + '_c.htm';
        return this.loadPage(url)
            .then(async (metaDataPage) => {
            const spec = this.parseMetaDataPage(metaDataPage);
            const structurePage = await this.loadPage(`./${this.type}_s.htm`);
            const segmentNames = this.parseStructurePage(structurePage, spec);
            const promises = segmentNames.map(async (name) => {
                const page = await this.loadPage(`../trsd/trsd${name.toLowerCase()}.htm`);
                return this.parseSegmentDefinitionPage(name, page, spec);
            });
            return {
                specObj: spec,
                promises,
            };
        })
            .then((result) => Promise.all(result.promises)
            .then(() => result.specObj)
            .catch((error) => {
            console.warn(`Error while processing segment definition promises: Reason ${error.message}`);
            return result.specObj;
        }));
    }
}
exports.UNECELegacyMessageStructureParser = UNECELegacyMessageStructureParser;
//# sourceMappingURL=legacyMessageStructureParser.js.map