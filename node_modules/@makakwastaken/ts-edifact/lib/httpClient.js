"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpClient = void 0;
const axios = __importStar(require("axios"));
const url = __importStar(require("url"));
class HttpClient {
    baseUrl;
    constructor(baseUrl) {
        this.baseUrl = baseUrl;
    }
    async get(target) {
        const uri = url.resolve(this.baseUrl, target);
        const request = axios.default
            .get(uri)
            .then((axiosResponse) => {
            if (axiosResponse.status === 200) {
                const response = axiosResponse.data;
                return response;
            }
            else {
                console.error(`Unexpected response ${axiosResponse.status}: ${axiosResponse.data}`);
            }
            return '';
        })
            .catch((err) => {
            console.error(err.message);
            return '';
        });
        try {
            const data = await request;
            return Promise.resolve(data);
        }
        catch (error) {
            console.error(error);
            return Promise.reject(error);
        }
    }
}
exports.HttpClient = HttpClient;
//# sourceMappingURL=httpClient.js.map