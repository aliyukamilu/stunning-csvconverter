import { Separators } from './edi/separators';
import { Dictionary, ElementEntry, SegmentEntry } from './validator';
export declare type ResultType = {
    name: string;
    elements: ElementEntry[];
};
export declare type Result = {
    name: string;
    elements: ResultElement[];
};
export declare type ResultElement = {
    name: string;
    components: ResultComponents;
};
export declare type ResultComponents = {
    [key: string]: string | undefined;
};
export declare class Reader {
    private result;
    private elements;
    private element;
    private validator;
    private parser;
    private defined;
    private validationTables;
    private definitionCache;
    private unbCharsetDefined;
    separators: Separators;
    constructor(messageSpecDir?: string, throwOnMissingDefinitions?: boolean);
    define(definitions: Dictionary<SegmentEntry>): void;
    private initializeIfNeeded;
    parse(document: string): ResultType[];
}
//# sourceMappingURL=reader.d.ts.map